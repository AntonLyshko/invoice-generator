{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\tt-demo\\\\client\\\\src\\\\messenger\\\\chats.js\";\nimport React, { Fragment, Component, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nconst socket = io('http://localhost:5000');\n\nconst Chats = () => {\n  //TODO При обновлении или заходе на страницу получать диалоги\n  //TODO вместо id имена. И разделить на полученые и отправленные, как в вк\n  //TODO Как вк, при нажатии на сообщение, всплывает диалог, думаю c Route сделать\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chats-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"\\u0417\\u0434\\u0435\\u0441\\u044C \\u0431\\u0443\\u0434\\u0443\\u0442 \\u0432\\u0441\\u0435 \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433\\u0438\"), chats.length === 0 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"\\u0423 \\u0442\\u0435\\u0431\\u044F \\u043D\\u0435\\u0442 \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433\\u043E\\u0432\") : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, chats.map(chat => React.createElement(\"div\", {\n    key: chat._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, chat.messages[0].user), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, chat.messages[0].text))))));\n};\n\nexport default Chats;","map":{"version":3,"sources":["C:\\projects\\tt-demo\\client\\src\\messenger\\chats.js"],"names":["React","Fragment","Component","useEffect","useState","io","axios","socket","Chats","chats","length","map","chat","_id","messages","user","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAD,CAAjB;;AAEA,MAAMG,KAAK,GAAG,MAAM;AAElB;AACA;AACA;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIADF,EAEGC,KAAK,CAACC,MAAN,KAAiB,CAAjB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IACb;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,QAAL,CAAc,CAAd,EAAiBC,IAAtB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,CAACE,QAAL,CAAc,CAAd,EAAiBE,IAAtB,CAFF,CADD,CADH,CALJ,CADF,CADF;AAmBD,CAxBD;;AA0BA,eAAeR,KAAf","sourcesContent":["import React, { Fragment, Component, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Chats = () => {\r\n\r\n  //TODO При обновлении или заходе на страницу получать диалоги\r\n  //TODO вместо id имена. И разделить на полученые и отправленные, как в вк\r\n  //TODO Как вк, при нажатии на сообщение, всплывает диалог, думаю c Route сделать\r\n  return (\r\n    <Fragment>\r\n      <div className='chats-container'>\r\n        <p>Здесь будут все диалоги</p>\r\n        {chats.length === 0 ? (\r\n          <p>У тебя нет диалогов</p>\r\n        ) : (\r\n          <Fragment>\r\n            {chats.map(chat => (\r\n              <div key={chat._id}>\r\n                <h4>{chat.messages[0].user}</h4>\r\n                <h4>{chat.messages[0].text}</h4>\r\n              </div>\r\n            ))}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n"]},"metadata":{},"sourceType":"module"}