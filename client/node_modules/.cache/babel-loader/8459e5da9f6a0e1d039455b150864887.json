{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\ed_tt\\\\client\\\\src\\\\comp\\\\posts\\\\postItem.js\";\nimport React, { Fragment, Component, Suspense, useState, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { Route, Switch, Link, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PostItem = ({\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    comments,\n    likes,\n    date\n  }\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, name), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, text), React.createElement(\"img\", {\n    src: avatar,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, date), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, comments), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, likes));\n};\n\nPostItem.propTypes = {\n  profile: PropTypes.array.isRequired,\n  auth\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(withRouter(PostItem));","map":{"version":3,"sources":["C:\\projects\\ed_tt\\client\\src\\comp\\posts\\postItem.js"],"names":["React","Fragment","Component","Suspense","useState","useEffect","Moment","Route","Switch","Link","Redirect","withRouter","connect","PropTypes","PostItem","auth","post","_id","text","name","avatar","comments","likes","date","propTypes","profile","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,OANP;AAOA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,UAAxC,QAA0D,kBAA1D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,IADgB;AAEhBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,QAA3B;AAAqCC,IAAAA,KAArC;AAA4CC,IAAAA;AAA5C;AAFU,CAAD,KAGX;AACJ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CAFF,EAGE;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAkB,IAAA,GAAG,EAAC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BG,IAA7B,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,QAAL,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CANF,CADF;AAUD,CAdD;;AAeAR,QAAQ,CAACU,SAAT,GAAqB;AACnBC,EAAAA,OAAO,EAAEZ,SAAS,CAACa,KAAV,CAAgBC,UADN;AAEnBZ,EAAAA;AAFmB,CAArB;;AAIA,MAAMa,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CACpBgB,eADoB,EAEpB,EAFoB,CAAP,CAGbjB,UAAU,CAACG,QAAD,CAHG,CAAf","sourcesContent":["import React, {\r\n  Fragment,\r\n  Component,\r\n  Suspense,\r\n  useState,\r\n  useEffect\r\n} from 'react';\r\nimport Moment from 'react-moment';\r\nimport { Route, Switch, Link, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  post: { _id, text, name, avatar, comments, likes, date }\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h5>{name}</h5>\r\n      <h5>{text}</h5>\r\n      <img src={avatar} alt='' />\r\n      <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      <h5>{comments}</h5>\r\n      <h5>{likes}</h5>\r\n    </div>\r\n  );\r\n};\r\nPostItem.propTypes = {\r\n  profile: PropTypes.array.isRequired,\r\n  auth\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(withRouter(PostItem));\r\n"]},"metadata":{},"sourceType":"module"}