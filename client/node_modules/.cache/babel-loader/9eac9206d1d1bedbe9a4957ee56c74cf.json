{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\tt-demo\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\projects\\\\tt-demo\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\tt-demo\\\\client\\\\src\\\\messenger\\\\messenger.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, Component, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Chat from './chats';\nconst socket = io('http://localhost:5000');\n\nconst Messenger = () => {\n  const _useState = useState({\n    currentClient: '',\n    currentUser: [],\n    clients: [],\n    chats: [],\n    loading: true\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  window.onunload = () => {\n    socket.emit('client_disconnected', {\n      socket: state.currentClient\n    });\n  };\n\n  socket.on('connect', async clients => {\n    const res = await axios.get('/api/chats');\n    setState(_objectSpread({}, state, {\n      chats: res.data\n    }));\n  });\n  socket.on('getAllUsers', async msg => {\n    const currentUser = await msg.users.filter(user => {\n      return user.socket === state.currentClient;\n    });\n    setState(_objectSpread({}, state, {\n      clients: msg.users,\n      loading: false,\n      currentUser: currentUser[0]\n    }));\n  });\n  socket.on('allClients', clients => {\n    setState(_objectSpread({}, state, {\n      clients: clients.clients\n    }));\n  });\n  socket.on('socketId', msg => {\n    if (localStorage.token) {\n      setState(_objectSpread({}, state, {\n        currentClient: msg.socketId\n      }));\n      socket.emit('token', {\n        token: localStorage.token,\n        socketId: msg.socketId\n      });\n    }\n  });\n  socket.on('privateMsgClient', msg => {\n    setState(_objectSpread({}, state, {\n      chats: msg.msg\n    }));\n  });\n\n  const selectSend = async (socket_id, name, id, online) => {\n    const msg = await prompt(\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0438\\u0441\\u044C\\u043C\\u043E \".concat(name), '');\n    socket.emit('privateMsgServer', {\n      from: state.currentUser._id,\n      to: socket_id,\n      msg: msg,\n      name: name,\n      id: id\n    });\n  };\n\n  const clients = state.clients,\n        loading = state.loading,\n        chats = state.chats;\n  return React.createElement(\"div\", {\n    className: \"messenger-cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"users-cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"), React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, loading ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\") : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, clients.map(client => React.createElement(\"h4\", {\n    key: client._id,\n    onClick: () => selectSend(client.socket, client.name, client._id, client.online),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, client.name, client.online ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \" Online\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \" Offline\")))))), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chats-cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, loading ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\") : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, chats.map(chat => React.createElement(Chat, {\n    key: chat._id,\n    chat: chat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))))))));\n};\n\nexport default Messenger;","map":{"version":3,"sources":["C:\\projects\\tt-demo\\client\\src\\messenger\\messenger.js"],"names":["React","Fragment","Component","useEffect","useState","io","Route","Switch","Link","axios","Chat","socket","Messenger","currentClient","currentUser","clients","chats","loading","state","setState","window","onunload","emit","on","res","get","data","msg","users","filter","user","localStorage","token","socketId","selectSend","socket_id","name","id","online","prompt","from","_id","to","map","client","chat"],"mappings":"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","sourcesContent":["import React, { Fragment, Component, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Chat from './chats';\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Messenger = () => {\r\n  const [state, setState] = useState({\r\n    currentClient: '',\r\n    currentUser: [],\r\n    clients: [],\r\n    chats: [],\r\n    loading: true\r\n  });\r\n\r\n  window.onunload = () => {\r\n    socket.emit('client_disconnected', { socket: state.currentClient });\r\n  };\r\n  socket.on('connect', async clients => {\r\n    const res = await axios.get('/api/chats');\r\n    setState({\r\n      ...state,\r\n      chats: res.data\r\n    });\r\n  });\r\n\r\n  socket.on('getAllUsers', async msg => {\r\n    const currentUser = await msg.users.filter(user => {\r\n      return user.socket === state.currentClient;\r\n    });\r\n\r\n    setState({\r\n      ...state,\r\n      clients: msg.users,\r\n      loading: false,\r\n      currentUser: currentUser[0]\r\n    });\r\n  });\r\n\r\n  socket.on('allClients', clients => {\r\n    setState({ ...state, clients: clients.clients });\r\n  });\r\n\r\n  socket.on('socketId', msg => {\r\n    if (localStorage.token) {\r\n      setState({ ...state, currentClient: msg.socketId });\r\n      socket.emit('token', {\r\n        token: localStorage.token,\r\n        socketId: msg.socketId\r\n      });\r\n    }\r\n  });\r\n\r\n  socket.on('privateMsgClient', msg => {\r\n    setState({\r\n      ...state,\r\n      chats: msg.msg\r\n    });\r\n  });\r\n\r\n  const selectSend = async (socket_id, name, id, online) => {\r\n    const msg = await prompt(`Отправить письмо ${name}`, '');\r\n    socket.emit('privateMsgServer', {\r\n      from: state.currentUser._id,\r\n      to: socket_id,\r\n      msg: msg,\r\n      name: name,\r\n      id: id\r\n    });\r\n  };\r\n\r\n  const { clients, loading, chats } = state;\r\n  return (\r\n    <div className='messenger-cont'>\r\n      <div className='users-cont'>\r\n        <p>Список пользователей</p>\r\n        <Fragment>\r\n          {loading ? (\r\n            <p>Загрузка...</p>\r\n          ) : (\r\n            <Fragment>\r\n              {clients.map(client => (\r\n                <h4\r\n                  key={client._id}\r\n                  onClick={() =>\r\n                    selectSend(\r\n                      client.socket,\r\n                      client.name,\r\n                      client._id,\r\n                      client.online\r\n                    )\r\n                  }\r\n                >\r\n                  {client.name}\r\n                  {client.online ? <span> Online</span> : <span> Offline</span>}\r\n                </h4>\r\n              ))}\r\n            </Fragment>\r\n          )}\r\n        </Fragment>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path='/dashboard'>\r\n          <div className='chats-cont'>\r\n            <Fragment>\r\n              {loading ? (\r\n                <p>Загрузка...</p>\r\n              ) : (\r\n                <Fragment>\r\n                  {chats.map(chat => (\r\n                    <Chat key={chat._id} chat={chat} />\r\n                  ))}\r\n                </Fragment>\r\n              )}\r\n            </Fragment>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messenger;\r\n"]},"metadata":{},"sourceType":"module"}