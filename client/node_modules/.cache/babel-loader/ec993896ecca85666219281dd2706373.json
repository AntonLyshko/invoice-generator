{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utills/setAuthToken';\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {} catch (err) {}\n};\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = await JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger', 1500));\n      });\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:\\projects\\ed_tt\\client\\src\\actions\\auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","err","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,SALP;AAMA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AACD,MAAI,CAEH,CAFD,CAEE,OAAOC,GAAP,EAAY,CAGb;AAEF,CAXM;AAaP,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMP,QAAN,IAAkB;AACvE,QAAMQ,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAG,MAAMC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAnB;;AACA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AACAR,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAEtB,gBADC;AAEPuB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOd,GAAP,EAAY;AACZ,UAAMe,MAAM,GAAGf,GAAG,CAACgB,QAAJ,CAAaF,IAAb,CAAkBC,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAI;AACtBrB,QAAAA,QAAQ,CAACH,QAAQ,CAACwB,KAAK,CAACC,GAAP,EAAY,QAAZ,EAAsB,IAAtB,CAAT,CAAR;AACD,OAFD;AAGD;;AACDtB,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAErB;AADC,KAAD,CAAR;AAGD;AACF,CAxBM","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR\r\n} from './types';\r\nimport { setAlert } from './alert';\r\nimport setAuthToken from '../utills/setAuthToken';\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n      \r\n  } catch (err) {\r\n    \r\n      \r\n  }\r\n\r\n};\r\n\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  const body = await JSON.stringify({ name, email, password });\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg, 'danger', 1500));\r\n      });\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}