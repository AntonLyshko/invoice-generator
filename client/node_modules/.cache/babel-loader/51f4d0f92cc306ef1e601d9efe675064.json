{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\anton\\\\Desktop\\\\InvoiceGen\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\anton\\\\Desktop\\\\InvoiceGen\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\InvoiceGen\\\\client\\\\src\\\\comp\\\\invoice\\\\comp\\\\table.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios'; //import PropTypes from \"prop-types\";\n\nconst Table = () => {\n  const _useState = useState({\n    data: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const InvoiceTable = async () => {\n    let data = await axios.get('/api/invoice');\n    setState(_objectSpread({}, state, {\n      data: data\n    }));\n  };\n\n  InvoiceTable();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, loading ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\") : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, clients.map(client => React.createElement(\"h4\", {\n    key: client._id,\n    onClick: () => selectSend(client.socket, client.name, client._id, client.online),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, client.name, client.online ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Online\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Offline\"))))));\n};\n\nTable.prototype = {}; // const mapStateToProps = state => ({\n//   auth: state.auth\n// });\n\nexport default connect()(Table);","map":{"version":3,"sources":["C:\\Users\\anton\\Desktop\\InvoiceGen\\client\\src\\comp\\invoice\\comp\\table.js"],"names":["React","useState","Fragment","connect","axios","Table","data","state","setState","InvoiceTable","get","loading","clients","map","client","_id","selectSend","socket","name","online","prototype"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,oBACOJ,QAAQ,CAAC;AAClCK,IAAAA,IAAI,EAAE;AAD4B,GAAD,CADf;AAAA;AAAA,QACZC,KADY;AAAA,QACLC,QADK;;AAKnB,QAAMC,YAAY,GAAG,YAAY;AAChC,QAAIH,IAAI,GAAG,MAAMF,KAAK,CAACM,GAAN,CAAU,cAAV,CAAjB;AACAF,IAAAA,QAAQ,mBAAMD,KAAN;AAAaD,MAAAA,IAAI,EAAEA;AAAnB,OAAR;AACA,GAHD;;AAIAG,EAAAA,YAAY;AAEZ,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEE,OAAO,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADO,GAGP,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,OAAO,CAACC,GAAR,CAAYC,MAAM,IAClB;AACC,IAAA,GAAG,EAAEA,MAAM,CAACC,GADb;AAEC,IAAA,OAAO,EAAE,MACRC,UAAU,CACTF,MAAM,CAACG,MADE,EAETH,MAAM,CAACI,IAFE,EAGTJ,MAAM,CAACC,GAHE,EAITD,MAAM,CAACK,MAJE,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWEL,MAAM,CAACI,IAXT,EAYEJ,MAAM,CAACK,MAAP,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB,GAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZzC,CADA,CADF,CAJF,CADD,CADD;AA4BA,CAvCD;;AAwCAd,KAAK,CAACe,SAAN,GAAkB,EAAlB,C,CAEA;AACA;AACA;;AAEA,eAAejB,OAAO,GAAGE,KAAH,CAAtB","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst Table = () => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: []\r\n\t});\r\n\r\n\tconst InvoiceTable = async () => {\r\n\t\tlet data = await axios.get('/api/invoice');\r\n\t\tsetState({ ...state, data: data });\r\n\t};\r\n\tInvoiceTable();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Fragment>\r\n\t\t\t\t{loading ? (\r\n\t\t\t\t\t<p>Загрузка...</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t{clients.map(client => (\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tkey={client._id}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\tselectSend(\r\n\t\t\t\t\t\t\t\t\t\tclient.socket,\r\n\t\t\t\t\t\t\t\t\t\tclient.name,\r\n\t\t\t\t\t\t\t\t\t\tclient._id,\r\n\t\t\t\t\t\t\t\t\t\tclient.online\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{client.name}\r\n\t\t\t\t\t\t\t\t{client.online ? <span> Online</span> : <span> Offline</span>}\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</Fragment>\r\n\t\t</div>\r\n\t);\r\n};\r\nTable.prototype = {};\r\n\r\n// const mapStateToProps = state => ({\r\n//   auth: state.auth\r\n// });\r\n\r\nexport default connect()(Table);\r\n"]},"metadata":{},"sourceType":"module"}