{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\tt-demo\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\projects\\\\tt-demo\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\tt-demo\\\\client\\\\src\\\\messenger\\\\messenger.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, Component, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nconst socket = io('http://localhost:5000');\n\nconst Messenger = () => {\n  const _useState = useState({\n    currentClient: '',\n    clients: [],\n    loading: true\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  window.onunload = () => {\n    socket.emit('client_disconnected', {\n      socket: state.currentClient\n    });\n  };\n\n  socket.on('connect', async clients => {// const users = await axios.get('/api/users/all');\n    // setState({ ...state, clients: users.data });\n  });\n  socket.on('getAllUsers', async msg => {\n    setState(_objectSpread({}, state, {\n      clients: msg.users,\n      loading: false\n    }));\n    const currentUser = msg.users;\n  });\n  socket.on('allClients', clients => {\n    setState(_objectSpread({}, state, {\n      clients: clients.clients\n    }));\n  });\n  socket.on('socketId', msg => {\n    console.log(msg);\n\n    if (localStorage.token) {\n      setState(_objectSpread({}, state, {\n        currentClient: msg.socketId\n      }));\n      socket.emit('token', {\n        token: localStorage.token,\n        socketId: msg.socketId\n      });\n    }\n  });\n  socket.on('privateMsgClient', msg => {\n    console.log(msg.msg);\n  });\n\n  const selectSend = async (socket_id, name, id, online) => {\n    const msg = await prompt(\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0438\\u0441\\u044C\\u043C\\u043E \".concat(name), '');\n    socket.emit('privateMsgServer', {\n      to: socket_id,\n      msg: msg,\n      name: name,\n      id: id\n    });\n  };\n\n  const refresh = async () => {\n    try {\n      const users = await axios.get('/api/users/all');\n      setState(_objectSpread({}, state, {\n        clients: users.data\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const clients = state.clients,\n        loading = state.loading;\n  console.log(clients);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, loading ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\") : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, clients.map(client => React.createElement(\"h4\", {\n    key: client._id,\n    onClick: () => selectSend(client.socket, client.name, client._id, client.online),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, client.name, client.online ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" Online\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" Offline\")))), React.createElement(\"h5\", {\n    onClick: () => refresh(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\u041E\\u0411\\u041D\\u041E\\u0412\\u0418\\u0422\\u042C\"));\n};\n\nexport default Messenger;","map":{"version":3,"sources":["C:\\projects\\tt-demo\\client\\src\\messenger\\messenger.js"],"names":["React","Fragment","Component","useEffect","useState","io","axios","socket","Messenger","currentClient","clients","loading","state","setState","window","onunload","emit","on","msg","users","currentUser","console","log","localStorage","token","socketId","selectSend","socket_id","name","id","online","prompt","to","refresh","get","data","err","error","map","client","_id"],"mappings":"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","sourcesContent":["import React, { Fragment, Component, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Messenger = () => {\r\n  const [state, setState] = useState({\r\n    currentClient: '',\r\n    clients: [],\r\n    loading: true\r\n  });\r\n\r\n  window.onunload = () => {\r\n    socket.emit('client_disconnected', { socket: state.currentClient });\r\n  };\r\n  socket.on('connect', async clients => {\r\n    // const users = await axios.get('/api/users/all');\r\n    // setState({ ...state, clients: users.data });\r\n  });\r\n\r\n  socket.on('getAllUsers', async msg => {\r\n    setState({ ...state, clients: msg.users, loading: false });\r\n        const currentUser = msg.users;\r\n  });\r\n\r\n  socket.on('allClients', clients => {\r\n    setState({ ...state, clients: clients.clients });\r\n\r\n  });\r\n\r\n  socket.on('socketId', msg => {\r\n    console.log(msg);\r\n    if (localStorage.token) {\r\n      setState({ ...state, currentClient: msg.socketId });\r\n      socket.emit('token', {\r\n        token: localStorage.token,\r\n        socketId: msg.socketId\r\n      });\r\n    }\r\n  });\r\n\r\n  socket.on('privateMsgClient', msg => {\r\n    console.log(msg.msg);\r\n  });\r\n\r\n  const selectSend = async (socket_id, name, id, online) => {\r\n    const msg = await prompt(`Отправить письмо ${name}`, '');\r\n    socket.emit('privateMsgServer', {\r\n      to: socket_id,\r\n      msg: msg,\r\n      name: name,\r\n      id: id\r\n    });\r\n  };\r\n\r\n  const refresh = async () => {\r\n    try {\r\n      const users = await axios.get('/api/users/all');\r\n      setState({ ...state, clients: users.data });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const { clients, loading } = state;\r\n  console.log(clients);\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <p>Загрузка...</p>\r\n      ) : (\r\n        <Fragment>\r\n          {clients.map(client => (\r\n            <h4\r\n              key={client._id}\r\n              onClick={() =>\r\n                selectSend(\r\n                  client.socket,\r\n                  client.name,\r\n                  client._id,\r\n                  client.online\r\n                )\r\n              }\r\n            >\r\n              {client.name}\r\n              {client.online ? <span> Online</span> : <span> Offline</span>}\r\n            </h4>\r\n          ))}\r\n        </Fragment>\r\n      )}\r\n\r\n      <h5 onClick={() => refresh()}>ОБНОВИТЬ</h5>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Messenger;\r\n"]},"metadata":{},"sourceType":"module"}