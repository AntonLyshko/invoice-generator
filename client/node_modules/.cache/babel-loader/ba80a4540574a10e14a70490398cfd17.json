{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\anton\\\\Desktop\\\\TeamTask\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_POSTS, POST_ERROR } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: [],\n  loading: true,\n  error: []\n};\nexport default function (state = initialState, actions) {\n  const type = actions.type,\n        payload = actions.payload;\n\n  switch (type) {\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: payload,\n        loading: false\n      });\n\n    case POST_ERROR:\n      return _objectSpread({}, state, {\n        error: payload,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\anton\\Desktop\\TeamTask\\client\\src\\reducers\\post.js"],"names":["GET_POSTS","POST_ERROR","initialState","posts","post","loading","error","state","actions","type","payload"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,OAA/B,EAAwC;AAAA,QAC7CC,IAD6C,GAC3BD,OAD2B,CAC7CC,IAD6C;AAAA,QACvCC,OADuC,GAC3BF,OAD2B,CACvCE,OADuC;;AAErD,UAAQD,IAAR;AACE,SAAKT,SAAL;AACE,+BACKO,KADL;AAEEJ,QAAAA,KAAK,EAAEO,OAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKJ,UAAL;AACE,+BACKM,KADL;AAEED,QAAAA,KAAK,EAAEI,OAFT;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF;AACE,aAAOE,KAAP;AAdJ;AAgBD","sourcesContent":["import { GET_POSTS, POST_ERROR } from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: [],\r\n  loading: true,\r\n  error: []\r\n};\r\n\r\nexport default function(state = initialState, actions) {\r\n  const { type, payload } = actions;\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}