{"ast":null,"code":"import _slicedToArray from \"C:\\\\projects\\\\tt-demo\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\tt-demo\\\\client\\\\src\\\\messenger\\\\chats.js\";\nimport React, { Fragment, Component, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nconst socket = io('http://localhost:5000');\n\nconst Chat = () => {\n  const _useState = useState({\n    chats: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const chats = state.chats;\n  console.log(chats); //TODO При обновлении или заходе на страницу получать диалоги\n  //TODO вместо id имена. И разделить на полученые и отправленные, как в вк\n  //TODO Как вк, при нажатии на сообщение, всплывает диалог, думаю c Route сделать\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"1\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"1\")));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:\\projects\\tt-demo\\client\\src\\messenger\\chats.js"],"names":["React","Fragment","Component","useEffect","useState","io","axios","socket","Chat","chats","state","setState","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAD,CAAjB;;AAEA,MAAMG,IAAI,GAAG,MAAM;AAAA,oBACSJ,QAAQ,CAAC;AACjCK,IAAAA,KAAK,EAAE;AAD0B,GAAD,CADjB;AAAA;AAAA,QACVC,KADU;AAAA,QACHC,QADG;;AAAA,QAKTF,KALS,GAKCC,KALD,CAKTD,KALS;AAMjBG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EANiB,CAQjB;AACA;AACA;;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF,CADF;AAQD,CAnBD;;AAqBA,eAAeD,IAAf","sourcesContent":["import React, { Fragment, Component, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Chat = () => {\r\n  const [state, setState] = useState({\r\n    chats: []\r\n  });\r\n\r\n  const { chats } = state;\r\n  console.log(chats);\r\n\r\n  //TODO При обновлении или заходе на страницу получать диалоги\r\n  //TODO вместо id имена. И разделить на полученые и отправленные, как в вк\r\n  //TODO Как вк, при нажатии на сообщение, всплывает диалог, думаю c Route сделать\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <p>1</p>\r\n        <h3>1</h3>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}