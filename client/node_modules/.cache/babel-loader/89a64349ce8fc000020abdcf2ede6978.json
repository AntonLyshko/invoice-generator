{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\tt-demo\\\\client\\\\src\\\\messenger\\\\chats.js\";\nimport React, { Fragment, Component, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport dateFormat from 'dateformat';\nconst socket = io('http://localhost:5000');\n\nconst Chat = ({\n  chat: {\n    date,\n    messages,\n    users\n  }\n}) => {\n  //TODO вместо id имена. И разделить на полученые и отправленные, как в вк\n  //TODO Как вк, при нажатии на сообщение, всплывает диалог, думаю c Route сделать\n  date = dateFormat(date);\n  messages = messages[0];\n  console.log(date);\n  console.log(messages);\n  console.log(messages.user);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"\\\"\\\"messages.user\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"1\")));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:\\projects\\tt-demo\\client\\src\\messenger\\chats.js"],"names":["React","Fragment","Component","useEffect","useState","io","axios","dateFormat","socket","Chat","chat","date","messages","users","console","log","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAD,CAAjB;;AAEA,MAAMI,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB;AAAR,CAAD,KAAyC;AACpD;AACA;AACAF,EAAAA,IAAI,GAAGJ,UAAU,CAACI,IAAD,CAAjB;AACAC,EAAAA,QAAQ,GAAGA,QAAQ,CAAC,CAAD,CAAnB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF,CADF;AAQD,CAjBD;;AAmBA,eAAeP,IAAf","sourcesContent":["import React, { Fragment, Component, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport dateFormat from 'dateformat';\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Chat = ({ chat: { date, messages, users } }) => {\r\n  //TODO вместо id имена. И разделить на полученые и отправленные, как в вк\r\n  //TODO Как вк, при нажатии на сообщение, всплывает диалог, думаю c Route сделать\r\n  date = dateFormat(date);\r\n  messages = messages[0];\r\n\r\n  console.log(date);\r\n  console.log(messages);\r\n  console.log(messages.user);\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <p>\"\"messages.user</p>\r\n        <h5>1</h5>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}