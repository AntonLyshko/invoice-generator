{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\ed_tt\\\\client\\\\src\\\\comp\\\\profile\\\\profiles.js\";\nimport React, { Fragment, Component, Suspense, useState, useEffect } from 'react';\nimport ProfileItem from './profileItem';\nimport { Route, Switch, Link, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Loading from '../loading/loading';\nimport { getProfiles } from '../../actions/profile';\ngetProfiles();\n\nconst Profiles = ({\n  getProfiles,\n  profile\n}) => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, profile.loading ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"\\u0422\\u0443\\u0442 \\u0431\\u0443\\u0434\\u0443\\u0442 \\u0432\\u0441\\u0435 \\u044E\\u0437\\u0435\\u0440\\u044B\"), profile.profiles.length > 0 ? profile.profiles.map(profile => React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })) : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"\\u041D\\u0435\\u0442\\u0443 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u0435\\u0439\")));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(null, {\n  getProfiles\n})(withRouter(Profiles));","map":{"version":3,"sources":["C:\\projects\\ed_tt\\client\\src\\comp\\profile\\profiles.js"],"names":["React","Fragment","Component","Suspense","useState","useEffect","ProfileItem","Route","Switch","Link","Redirect","withRouter","connect","PropTypes","Loading","getProfiles","Profiles","profile","loading","profiles","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,OANP;AAOA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,UAAxC,QAA0D,kBAA1D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEAA,WAAW;;AACX,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,WAAF;AAAeE,EAAAA;AAAf,CAAD,KAA8B;AAC7C,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,OAAR,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GADF,EAEGD,OAAO,CAACE,QAAR,CAAiBC,MAAjB,GAA0B,CAA1B,GACCH,OAAO,CAACE,QAAR,CAAiBE,GAAjB,CAAqBJ,OAAO,IAC1B,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACK,GAA1B;AAA+B,IAAA,OAAO,EAAEL,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAPJ,CAJJ,CADF;AAkBD,CAnBD;;AAoBAD,QAAQ,CAACO,SAAT,GAAqB;AACnBR,EAAAA,WAAW,EAAEF,SAAS,CAACW,IAAV,CAAeC,UADT;AAEnBR,EAAAA,OAAO,EAAEJ,SAAS,CAACa,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADiB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CACpB,IADoB,EAEpB;AAAEG,EAAAA;AAAF,CAFoB,CAAP,CAGbJ,UAAU,CAACK,QAAD,CAHG,CAAf","sourcesContent":["import React, {\r\n  Fragment,\r\n  Component,\r\n  Suspense,\r\n  useState,\r\n  useEffect\r\n} from 'react';\r\nimport ProfileItem from './profileItem';\r\nimport { Route, Switch, Link, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Loading from '../loading/loading';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\ngetProfiles();\r\nconst Profiles = ({ getProfiles, profile }) => {\r\n  return (\r\n    <Fragment>\r\n      {profile.loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Fragment>\r\n          <h5>Тут будут все юзеры</h5>\r\n          {profile.profiles.length > 0 ? (\r\n            profile.profiles.map(profile => (\r\n              <ProfileItem key={profile._id} profile={profile} />\r\n            ))\r\n          ) : (\r\n            <h4>Нету профилей</h4>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  { getProfiles }\r\n)(withRouter(Profiles));\r\n"]},"metadata":{},"sourceType":"module"}