{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT } from \"./types\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utills/setAuthToken\";\n\nconst loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/auth\");\n    console.log(res.data);\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }\n};\n\nexport const login = ({\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = await JSON.stringify({\n    email,\n    password\n  });\n  console.log(body);\n\n  try {\n    console.log(\"Sending\");\n    const res = await axios.post(\"/api/auth\", body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.error;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, \"danger\", 1500));\n      });\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};\nexport default loadUser;","map":{"version":3,"sources":["C:\\Users\\anton\\Desktop\\InvoiceGen\\client\\src\\actions\\auth.js"],"names":["axios","USER_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","res","get","console","log","data","type","payload","err","errors","response","login","email","password","config","headers","body","JSON","stringify","post","error","forEach","msg","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,MALF,QAMO,SANP;AAOA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACvC,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AACD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,WAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAP,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEhB,WADC;AAEPiB,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOG,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBI,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVX,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEf;AADC,OAAD,CAAR;AAGD;AACF;AACF,CAnBD;;AAqBA,OAAO,MAAMoB,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB,MAAMf,QAAN,IAAkB;AAC9D,QAAMgB,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAG,MAAMC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAnB;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;;AACA,MAAI;AACFb,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMH,GAAG,GAAG,MAAMZ,KAAK,CAAC8B,IAAN,CAAW,WAAX,EAAwBH,IAAxB,EAA8BF,MAA9B,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb,aADC;AAEPc,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFN,KAAD,CAAR;AAIAP,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GATD,CASE,OAAOW,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBe,KAAjC;;AACA,QAAIX,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACY,OAAP,CAAeD,KAAK,IAAI;AACtBtB,QAAAA,QAAQ,CAACH,QAAQ,CAACyB,KAAK,CAACE,GAAP,EAAY,QAAZ,EAAsB,IAAtB,CAAT,CAAR;AACD,OAFD;AAGD;;AACDxB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAGD;AACF,CA5BM;AA8BP,OAAO,MAAM+B,MAAM,GAAG,MAAMzB,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACD,CAFM;AAIP,eAAeG,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT\r\n} from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\nimport setAuthToken from \"../utills/setAuthToken\";\r\n\r\nconst loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const login = ({ email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  const body = await JSON.stringify({ email, password });\r\n  console.log(body);\r\n  try {\r\n    console.log(\"Sending\");\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.error;\r\n    if (errors) {\r\n      errors.forEach(error => {\r\n        dispatch(setAlert(error.msg, \"danger\", 1500));\r\n      });\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n\r\nexport default loadUser;\r\n"]},"metadata":{},"sourceType":"module"}