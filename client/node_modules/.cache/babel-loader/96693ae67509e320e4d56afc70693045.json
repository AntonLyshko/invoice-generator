{"ast":null,"code":"import _slicedToArray from \"C:\\\\projects\\\\tt-demo\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\tt-demo\\\\client\\\\src\\\\messenger\\\\messenger.js\";\nimport React, { Fragment, Component, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:5000');\n\nconst messenger = () => {\n  const _useState = useState({\n    clients\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  socket.on('connect', () => {\n    console.log('Server Connected');\n  });\n  socket.emit('end', {\n    msg: 'end'\n  });\n  socket.on('allClients', clients => {\n    console.log(clients);\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n};\n\nexport default messenger;","map":{"version":3,"sources":["C:\\projects\\tt-demo\\client\\src\\messenger\\messenger.js"],"names":["React","Fragment","Component","useEffect","useState","io","socket","messenger","clients","state","setState","on","console","log","emit","msg"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;;AAEA,MAAME,SAAS,GAAG,MAAM;AAAA,oBACMH,QAAQ,CAAC;AACjCI,IAAAA;AADiC,GAAD,CADd;AAAA;AAAA,QACbC,KADa;AAAA,QACNC,QADM;;AAKtBJ,EAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GAFD;AAGAP,EAAAA,MAAM,CAACQ,IAAP,CAAY,KAAZ,EAAmB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAnB;AACAT,EAAAA,MAAM,CAACK,EAAP,CAAU,YAAV,EAAwBH,OAAO,IAAI;AACjCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACD,GAFD;AAIA,SAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAdD;;AAgBA,eAAeD,SAAf","sourcesContent":["import React, { Fragment, Component, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst messenger = () => {\r\n    const [state, setState] = useState({\r\n      clients\r\n    });\r\n\r\n  socket.on('connect', () => {\r\n    console.log('Server Connected');\r\n  });\r\n  socket.emit('end', { msg: 'end' });\r\n  socket.on('allClients', clients => {\r\n    console.log(clients);\r\n  });\r\n\r\n  return <Fragment>{}</Fragment>;\r\n};\r\n\r\nexport default messenger;\r\n"]},"metadata":{},"sourceType":"module"}