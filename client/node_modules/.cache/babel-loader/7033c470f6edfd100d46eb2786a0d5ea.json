{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\anton\\\\Desktop\\\\InvoiceGen\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\anton\\\\Desktop\\\\InvoiceGen\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\InvoiceGen\\\\client\\\\src\\\\comp\\\\invoice\\\\comp\\\\creater.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport InvoiceContainer from './invoiceContainer.js';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver'; //import PropTypes from \"prop-types\";\n\nconst Creater = () => {\n  const _useState = useState({\n    order_id: '',\n    invoice_id: '',\n    currency: '',\n    data: [],\n    loaded: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const order_id = state.order_id;\n\n  const onChange = async e => {\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault(); // let res = await axios.get(\n    // \t`http://tools.raminternet.com/devotion/api/getProformaInfo/?id=${order_id}&token=n9VTU1yvRomDHZOBfTt0aKEMlSmzO9Na`\n    // );\n\n    let res = {\n      status: 'success',\n      message: '',\n      data: {\n        order_id: '5221',\n        invoice_id: '20PR00000042',\n        currency: 'USD',\n        issue_date: '2020-02-15 21:18:46',\n        customer_address: 'Martha Jensen\\n\\n235 Lexington Avenue  \\n52246, Iowa/Iowa City\\nUnited States',\n        delivery_address: 'Lauren Jensen\\n\\n235 Lexington Avenue  \\n52246, Iowa/Iowa City\\nUnited States',\n        payment_reference: '5c04b837b0ea5FB',\n        items: [{\n          name: 'Matty',\n          quantity: 1,\n          amount: '890.00'\n        }, {\n          name: 'Delivery',\n          quantity: 1,\n          amount: '49.00'\n        }]\n      }\n    };\n\n    if (res.status == 'success') {\n      await setState(_objectSpread({}, state, {\n        data: res.data,\n        loaded: true\n      }));\n    } // await axios\n    // \t.get('/api/invoice', {\n    // \t\tresponseType: 'arraybuffer',\n    // \t\theaders: { Accept: 'application/pdf' }\n    // \t})\n    // \t.then(res => {\n    // \t\tconst blob = new Blob([res.data], { type: 'application/pdf' });\n    // \t\tsaveAs(blob, `pdf${order_id}.pdf`);\n    // \t});\n    // await axios\n    // \t.get('/api/invoice/file/' + order_id, { response_type: 'blob' })\n    // \t.then(res => {\n    // \t\tconsole.log(res.data);\n    // \t\tlet file = new Blob([res.data], { type: 'application/pdf' });\n    // \t\tsaveAs(file, `pdf${order_id}.pdf`);\n    // \t});\n\n  };\n\n  return React.createElement(\"div\", {\n    className: \"creater-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Create Invoice\"), React.createElement(\"div\", {\n    className: \"order-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"creater-form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"creater-input\",\n    placeholder: \"Order Id\",\n    name: \"order_id\",\n    value: order_id,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"LogIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"invoice-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(InvoiceContainer, {\n    data: state.data,\n    loaded: state.loaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n};\n\nCreater.prototype = {}; //const mapStateToProps = state => ({});\n\nexport default connect()(Creater);","map":{"version":3,"sources":["C:\\Users\\anton\\Desktop\\InvoiceGen\\client\\src\\comp\\invoice\\comp\\creater.js"],"names":["React","useState","connect","InvoiceContainer","axios","saveAs","Creater","order_id","invoice_id","currency","data","loaded","state","setState","onChange","e","target","name","value","onSubmit","preventDefault","res","status","message","issue_date","customer_address","delivery_address","payment_reference","items","quantity","amount","prototype"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InvoiceContainer from './invoiceContainer.js';\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst Creater = () => {\r\n\tconst [state, setState] = useState({\r\n\t\torder_id: '',\r\n\t\tinvoice_id: '',\r\n\t\tcurrency: '',\r\n\t\tdata: [],\r\n\t\tloaded: false\r\n\t});\r\n\r\n\tconst { order_id } = state;\r\n\r\n\tconst onChange = async e => {\r\n\t\tsetState({ ...state, [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tconst onSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\t// let res = await axios.get(\r\n\t\t// \t`http://tools.raminternet.com/devotion/api/getProformaInfo/?id=${order_id}&token=n9VTU1yvRomDHZOBfTt0aKEMlSmzO9Na`\r\n\t\t// );\r\n\t\tlet res = {\r\n\t\t\tstatus: 'success',\r\n\t\t\tmessage: '',\r\n\t\t\tdata: {\r\n\t\t\t\torder_id: '5221',\r\n\t\t\t\tinvoice_id: '20PR00000042',\r\n\t\t\t\tcurrency: 'USD',\r\n\t\t\t\tissue_date: '2020-02-15 21:18:46',\r\n\t\t\t\tcustomer_address:\r\n\t\t\t\t\t'Martha Jensen\\n\\n235 Lexington Avenue  \\n52246, Iowa/Iowa City\\nUnited States',\r\n\t\t\t\tdelivery_address:\r\n\t\t\t\t\t'Lauren Jensen\\n\\n235 Lexington Avenue  \\n52246, Iowa/Iowa City\\nUnited States',\r\n\t\t\t\tpayment_reference: '5c04b837b0ea5FB',\r\n\t\t\t\titems: [\r\n\t\t\t\t\t{ name: 'Matty', quantity: 1, amount: '890.00' },\r\n\t\t\t\t\t{ name: 'Delivery', quantity: 1, amount: '49.00' }\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (res.status == 'success') {\r\n\t\t\tawait setState({ ...state, data: res.data, loaded: true });\r\n\t\t}\r\n\t\t// await axios\r\n\t\t// \t.get('/api/invoice', {\r\n\t\t// \t\tresponseType: 'arraybuffer',\r\n\t\t// \t\theaders: { Accept: 'application/pdf' }\r\n\t\t// \t})\r\n\t\t// \t.then(res => {\r\n\t\t// \t\tconst blob = new Blob([res.data], { type: 'application/pdf' });\r\n\t\t// \t\tsaveAs(blob, `pdf${order_id}.pdf`);\r\n\t\t// \t});\r\n\t\t// await axios\r\n\t\t// \t.get('/api/invoice/file/' + order_id, { response_type: 'blob' })\r\n\t\t// \t.then(res => {\r\n\t\t// \t\tconsole.log(res.data);\r\n\t\t// \t\tlet file = new Blob([res.data], { type: 'application/pdf' });\r\n\t\t// \t\tsaveAs(file, `pdf${order_id}.pdf`);\r\n\t\t// \t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='creater-container'>\r\n\t\t\t<h3>Create Invoice</h3>\r\n\t\t\t<div className='order-input'>\r\n\t\t\t\t<form className='creater-form' onSubmit={e => onSubmit(e)}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tclassName='creater-input'\r\n\t\t\t\t\t\tplaceholder='Order Id'\r\n\t\t\t\t\t\tname='order_id'\r\n\t\t\t\t\t\tvalue={order_id}\r\n\t\t\t\t\t\tonChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input type='submit' className='btn btn-primary' value='LogIn' />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<div className='invoice-container'>\r\n\t\t\t\t<br />\r\n\t\t\t\t<InvoiceContainer data={state.data} loaded={state.loaded} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nCreater.prototype = {};\r\n\r\n//const mapStateToProps = state => ({});\r\n\r\nexport default connect()(Creater);\r\n"]},"metadata":{},"sourceType":"module"}